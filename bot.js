// const { Telegraf } = require('telegraf');
// require('dotenv').config();

// const commands = require('./commands.js');
// const events = require('./events.js');

// if (!process.env.TELEGRAM_BOT_TOKEN) {
//     console.error("‚ùå –û—à–∏–±–∫–∞: TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!");
//     process.exit(1);
// }

// const bot = new Telegraf(process.env.TELEGRAM_BOT_TOKEN);

// bot.start(commands.startCommand);
// commands.buttonActions(bot);

// bot.on('new_chat_members', events.userJoined);

// bot.launch()
//     .then(() => console.log("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!"))
//     .catch(err => console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞:", err));
const { Telegraf } = require("telegraf");
require("dotenv").config();
const mongoose = require("mongoose");
const User = require("./models/user");
const commands = require("./commands.js");
const events = require("./events.js");

const bot = new Telegraf(process.env.TELEGRAM_BOT_TOKEN);

mongoose
  .connect(process.env.mongoURI)
  .then(() => {
    console.log("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB");

    // üìå –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∫–æ–º–∞–Ω–¥ —ñ —ñ–≤–µ–Ω—Ç—ñ–≤ —Ç—ñ–ª—å–∫–∏ –ø—ñ—Å–ª—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ë–î
    bot.start(commands.startCommand);
    commands.buttonActions(bot);
    bot.on("new_chat_members", events.userJoined);

    bot.command("start", async (ctx) => {
      try {
        const tgId = ctx.from.id;

        let user = await User.findOne({ telegramId: tgId });

        if (!user) {
          user = await User.create({
            username: ctx.from.username || "",
            firstName: ctx.from.first_name || "NoName",
            telegramId: tgId,
          });
          console.log("üÜï –°—Ç–≤–æ—Ä–µ–Ω–æ –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", user.username);
        }

        ctx.reply(`üí∞ –¢–≤—ñ–π –±–∞–ª–∞–Ω—Å: ${user.balance} –º–æ–Ω–µ—Ç`);
      } catch (err) {
        console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ /balance:", err);
        ctx.reply("‚ö†Ô∏è –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –±–∞–ª–∞–Ω—Å—É.");
      }
    });

    bot
      .launch()
      .then(() => console.log("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!"))
      .catch((err) => console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:", err));
  })
  .catch((err) => {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:", err);
  });
